#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int value;
    int weight;
    double ratio;
}
Item;

int compare(const void *a, const void *b) {
    return ((Item *)b) -> ratio - ((Item *)a) -> ratio;  
    
}

double fractionalKnapsack(int n, int capacity, int values[], int weights[]) 
{
    Item items[n];
    
    for (int i = 0; i < n; i++) {
        items[i].value = values[i];
        items[i].weight = weights[i];
        items[i].ratio = (double)values[i] / weights[i];
    }

    qsort(items, n, sizeof(Item), compare);

    double totalValue = 0;
    for (int i = 0; i < n && capacity > 0; i++) 
    {
        if (items[i].weight <= capacity)
        {
            capacity -= items[i].weight;
            totalValue += items[i].value;
            
        } 
        else {
            totalValue += items[i].value * ((double)capacity / items[i].weight);
            break; 
        }
    }
    return totalValue;
}

int main() {
    int n, capacity;
    
    printf("Enter number of items: ");
    scanf("%d", &n);
    printf("Enter knapsack capacity: ");
    scanf("%d", &capacity);

    int values[n], weights[n];

    printf("Enter values of items: ");
    for (int i = 0; i < n; i++) scanf("%d", &values[i]);
    printf("Enter weights of items: ");
    for (int i = 0; i < n; i++) scanf("%d", &weights[i]);

    printf("Maximum value in knapsack: %.2f\n", fractionalKnapsack(n, capacity, values, weights));

    return 0;
}
